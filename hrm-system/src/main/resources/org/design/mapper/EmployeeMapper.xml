<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.design.mapper.EmployeeMapper">

    <!--<parameterMap id="ParamMap" type="Employee">
        <parameter property="department" javaType="Department" />
        <parameter property="job" javaType="Job" />
        <parameter property="role" javaType="Role" />
    </parameterMap>-->

    <resultMap id="BaseMap" type="Employee">
        <id property="id" column="id" />
        <result property="username" column="username" />
        <result property="password" column="password" />
        <result property="managerId" column="managerId" />
        <result property="address" column="address" />
        <result property="phone" column="phone" />
        <result property="gender" column="gender" />
        <result property="birthday" column="birthday" />
        <result property="createTime" column="create_time" />
        <result property="managerId" column="manager_id" />
        <association property="department" javaType="Department">
            <id column="id" property="id" />
            <result column="name" property="name"/>
            <result column="remark" property="remark"/>
        </association>
        <association property="job" javaType="Job">
            <id column="id" property="id" />
            <result column="name" property="name"/>
            <result column="remark" property="remark"/>
        </association>
        <association property="role"  javaType="Role">
            <id column="id" property="id" />
            <result column="name" property="name"/>
            <result column="available" property="available"/>
        </association>
    </resultMap>

    <insert id="save" parameterType="Employee">
        insert into employee values(null, #{username}, #{password}, #{department.id}, #{job.id}, #{role.id},
        #{managerId}, #{address}, #{phone}, #{gender}, #{birthday}, #{createTime});
    </insert>

    <delete id="delete" parameterType="Integer" >
        delete from employee where id = #{id};
    </delete>

    <update id="update" parameterType="Employee">
        update employee set username = #{username}, password = {}
        where id = #{id};
    </update>

    <select id="get" parameterType="Integer" resultMap="BaseMap">
        select * from employee where id = #{id};
    </select>

    <select id="findAll" resultMap="BaseMap">
        select e.*, r.id as sys_role_id, r.name, r.available from employee e, sys_role r where e.role_id = r.id
    </select>

    <select id="findExample" parameterType="Employee" resultMap="BaseMap">
        select e.*, r.id as sys_role_id, r.name, r.available from employee e, sys_role r where e.role_id = r.id and e.username like concat('%', #{username}, '%')
    </select>

    <select id="findByUsername" parameterType="String" resultMap="BaseMap">
        select * from employee where username = #{username};
    </select>

    <update id="updateRole" parameterType="Integer">
        update employee set role_id = #{roleId} where id = #{id};
    </update>
</mapper>